{"version":3,"sources":["Calculator.jsx","App.js","reportWebVitals.js","index.js","logo.svg"],"names":["Calculator","_useState","useState","Date","_useState2","Object","slicedToArray","startDate","setStartDate","_useState3","_useState4","endDate","setEndDate","_useState5","_useState6","days","setDays","_useState7","DAYS","MONTHS","YEARS","_useState8","daysData","setDaysData","_useState9","_useState10","setPrinciple","_useState11","_useState12","totInterest","setTotalInterest","_useState13","_useState14","totalAmount","setTotalAmount","_useState15","_useState16","disp","setDisp","react_default","a","createElement","className","id","type","step","react_datepicker_min_default","selected","onChange","date","dateFormat","onClick","principle","document","getElementById","value","interest","endsec","moment","valueOf","startsec","diffDays","Math","ceil","console","log","years","parseInt","yeardays","months","objectSpread","intPerYear","intPerMonth","intPerYears","intPerMonths","intPerDays","x","App","src_Calculator","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App","module","exports","p"],"mappings":"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","file":"static/js/main.b157025d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nfunction Calculator() {\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [days, setDays] = useState();\n  const [daysData, setDaysData] = useState({ DAYS: 0, MONTHS: 0, YEARS: 0 });\n  const [principle, setPrinciple] = useState(0);\n  const [totInterest, setTotalInterest] = useState(0);\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [disp, setDisp] = useState(false);\n\n  function calc() {\n    var principle = document.getElementById(\"principle\").value;\n    setPrinciple(principle);\n    var interest = document.getElementById(\"interest\").value;\n    var endsec = moment(endDate).valueOf();\n    var startsec = moment(startDate).valueOf();\n    var diffDays = Math.ceil((endsec - startsec) / (24 * 60 * 60 * 1000));\n    console.log(diffDays);\n    setDays(diffDays);\n    var years = parseInt(diffDays / 365);\n    var yeardays = years * 365;\n    var months = parseInt((diffDays - yeardays) / 30);\n    var mondays = months * 30;\n    var days = diffDays - yeardays - mondays;\n    setDaysData({\n      ...daysData,\n      DAYS: { days },\n      MONTHS: { months },\n      YEARS: { years },\n    });\n    var intPerYear = (principle * interest * 12) / 100;\n    var intPerMonth = intPerYear / 12;\n    var intPerDay = intPerMonth / 30;\n    var intPerYears = intPerYear * years;\n    var intPerMonths = intPerMonth * months;\n    var intPerDays = intPerDay * days;\n    var totInterest = Math.ceil(intPerYears + intPerMonths + intPerDays);\n    setTotalInterest(totInterest);\n    var x = parseInt(principle) + totInterest;\n    setTotalAmount(x);\n    setDisp(true);\n  }\n  return (\n    <div className=\"container vh-100 bg-primary\">\n      <div className=\"row d-flex justify-content-center\">\n        <div className=\"col text-danger text-center h1\">\n          Simple interest Calculator\n        </div>\n      </div>\n      <form>\n        <div className=\"form-group\">\n          <label className=\"h3\">Principle Amount</label>\n          <input\n            className=\"form-control input-md col-xs-2 w-25 m-auto text-center\"\n            id=\"principle\"\n            type=\"number\"\n            step=\"1000\"\n          />\n        </div>\n        <div className=\"form-group m-2\">\n          <label className=\"h3\">Interest</label>\n          <input\n            className=\"form-control input-md col-xs-2 w-25 m-auto text-center\"\n            id=\"interest\"\n            type=\"number\"\n            step=\"0.50\"\n          />\n        </div>\n        <div className=\"form-group m-2\">\n          <label className=\"h3\">Start Date</label>\n          <DatePicker\n            selected={startDate}\n            onChange={(date) => setStartDate(date)}\n            dateFormat=\"dd/MM/yyyy\"\n          />\n        </div>\n\n        <div className=\"form-group m-2\">\n          <label className=\"h3\">End Date</label>\n          <DatePicker\n            selected={endDate}\n            onChange={(date) => setEndDate(date)}\n            dateFormat=\"dd/MM/yyyy\"\n          />\n        </div>\n      </form>\n\n      <button type=\"button\" className=\"btn btn-secondary\" onClick={calc}>\n        Calculate\n      </button>\n      {disp ? (\n        <div>\n          <div className=\"row d-flex justify-content-center\">\n            <div className=\"col text-danger text-center h1\">\n              Time : <br></br>\n              {daysData.YEARS.years} Years {daysData.MONTHS.months} Months and{\" \"}\n              {daysData.DAYS.days} Days (total {days} days)\n            </div>\n          </div>\n\n          <div className=\"row d-flex justify-content-center\">\n            <div className=\"col text-danger text-center h1\">\n              Interest: {totInterest}\n            </div>\n          </div>\n          <div className=\"row d-flex justify-content-center\">\n            <div className=\"col text-danger text-center h1\">\n              Total Amount to be Paid: {totalAmount}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n}\nexport default Calculator;\n","import logo from \"./logo.svg\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Calculator from \"./Calculator\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";"],"sourceRoot":""}